# -*- coding: utf-8 -*-
"""Untitled26.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1gXz3NMaiMVfLWmkr8BzXlBO0NWCmUOmk
"""

!pip install torch torchvision torchaudio pycocotools pyyaml

import torch
print(f"PyTorch version: {torch.__version__}")
print(f"Whether CUDA available or not: {torch.cuda.is_available()}")

!mkdir -p /content/coco

!cd /content/coco && curl -O http://images.cocodataset.org/zips/train2017.zip
!cd /content/coco && curl -O http://images.cocodataset.org/zips/val2017.zip
!cd /content/coco && curl -O http://images.cocodataset.org/annotations/annotations_trainval2017.zip

!cd /content/coco && unzip -q train2017.zip
!cd /content/coco && unzip -q val2017.zip
!cd /content/coco && unzip -q annotations_trainval2017.zip

import os
train_images = os.listdir('/content/coco/train2017')
val_images = os.listdir('/content/coco/val2017')
annotations = os.listdir('/content/coco/annotations')

print(f"No. of training images: {len(train_images)}")
print(f"No. of validation images: {len(val_images)}")
print(f"Annotations files: {annotations}")

import json
import matplotlib.pyplot as plt
import matplotlib.patches as patches
from PIL import Image

annotations_path = '/content/coco/annotations/instances_train2017.json'

with open(annotations_path, 'r') as f:
    coco_data = json.load(f)

for category in coco_data['categories'][:5]:
    print(f"ID: {category['id']}, Name: {category['name']}")

for annotation in coco_data['annotations'][:3]:
    print(annotation)

for image in coco_data['images'][:3]:
    print(image)

def visualize_image(image_id):
   image_info = next(image for image in coco_data['images'] if image['id'] == image_id)
   image_path = f"/content/coco/train2017/{image_info['file_name']}"

   image = Image.open(image_path)
   plt.figure(figsize=(10, 8))
   plt.imshow(image)
   ax = plt.gca()

   annotations = [ann for ann in coco_data['annotations'] if ann['image_id'] == image_id]
   for ann in annotations:
      bbox = ann['bbox']
      category = next(cat for cat in coco_data['categories'] if cat['id'] == ann['category_id'])['name']

   rect = patches.Rectangle(
            (bbox[0], bbox[1]), bbox[2], bbox[3],
            linewidth=2, edgecolor='r', facecolor='none'
   )
   ax.add_patch(rect)

        # Display the category name
   plt.text(
          bbox[0], bbox[1] - 10, category,
          color='red', fontsize=12, weight='bold'
   )

   plt.axis('off')
   plt.show()

import random
random_image_id = random.choice(coco_data['images'])['id']
visualize_image(random_image_id)

!git clone https://github.com/ultralytics/yolov5

# Commented out IPython magic to ensure Python compatibility.
# %cd yolov5

"""pillow>=10.3.0 <br>
requests>=2.32.0
"""

!pip install -r requirements.txt

!pip install pillow==10.3.0

!pip install requests==2.32.0

yaml_content = """
train: /content/coco/train2017
val: /content/coco/val2017

nc: 80
names: ['person', 'bicycle', 'car', 'motorcycle', 'airplane', 'bus', 'train', 'truck', 'boat', 'traffic light', 'fire hydrant', 'stop sign', 'parking meter', 'bench', 'bird', 'cat', 'dog', 'horse', 'sheep', 'cow', 'elephant', 'bear', 'zebra', 'giraffe', 'backpack', 'umbrella', 'handbag', 'tie', 'suitcase', 'frisbee', 'skis', 'snowboard', 'sports ball', 'kite', 'baseball bat', 'baseball glove', 'skateboard', 'surfboard', 'tennis racket', 'bottle', 'wine glass', 'cup', 'fork', 'knife', 'spoon', 'bowl', 'banana', 'apple', 'sandwich', 'orange', 'broccoli', 'carrot', 'hot dog', 'pizza', 'donut', 'cake', 'chair', 'couch', 'potted plant', 'bed', 'dining table', 'toilet', 'tv', 'laptop', 'mouse', 'remote', 'keyboard', 'cell phone', 'microwave', 'oven', 'toaster', 'sink', 'refrigerator', 'book', 'clock', 'vase', 'scissors', 'teddy bear', 'hair drier', 'toothbrush']
"""

with open('coco.yaml', 'w') as f:
    f.write(yaml_content)

!cat coco.yaml

!python train.py --img 640 --epochs 3 --batch 16 --data coco128.yaml --weights yolov5s.pt

!python val.py --img 640 --conf 0.001 --data coco.yaml --weights /content/yolov5/runs/train/exp/weights/best.pt

!python train.py --img 640 --epochs 3 --data coco.yaml --weights /content/yolov5/runs/train/exp/weights/best.pt --cache

!python detect.py --source /content/coco/val2017 --weights yolov5s.pt --conf 0.4 --save-txt --save-conf --exist-ok

!python /content/yolov5/val.py --data coco128.yaml --weights yolov5s.pt --task val

from IPython.display import Image

image_path = "/content/yolov5/runs/detect/exp/000000000139.jpg"

Image(image_path)

!zip -r /content/yolo5.zip /content/yolov5/runs/val/exp4

from google.colab import files
files.download("/content/yolo5.zip")

